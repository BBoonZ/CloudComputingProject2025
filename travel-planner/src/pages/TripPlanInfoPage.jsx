import React, { useState, useEffect, use } from "react";
import { Link } from "react-router-dom";
import { useLocation, useNavigate } from "react-router-dom";
import EditTripModal from "../component/popup-editTripPlan";
import ShareTripModal from "../component/popup-shareTripPlan";
import ActivityTripModal from "../component/popup-ActivityTripModal";
import nav from "../css/main-nav.module.css";
import plantemp from "../css/tripTemplate.module.css";
import styles from "../css/tripPlan.module.css";
import tripTemplate from "../css/tripTemplate.module.css";

export default function TripPlanPage() {
    const navigate = useNavigate();
    const location = useLocation();
    const params = new URLSearchParams(location.search);
    const room_id = params.get("room_id");
    const [trip, setTrip] = useState(null);
    const [trips, setTrips] = useState([]);
    const [totaldate, setTotaldate] = useState([]);
    const [totalDays, setTotalDays] = useState(0);
    const [selectDate, setSelectedDate] = useState(null);
    const [description, setDescription] = useState("");
    const [title, setTitle] = useState("");
    const base_api = process.env.REACT_APP_API_URL;

    const generateTripDays = (startDateStr, endDateStr) => {
        const start = new Date(startDateStr);
        const end = new Date(endDateStr);
        const days = [];
        let current = new Date(start);

        let dayCount = 1;

        while (current <= end) {
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô "1 ‡∏ò.‡∏Ñ." ‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏¥‡∏°
            const options = { day: 'numeric', month: 'short' };
            const dateText = current.toLocaleDateString('th-TH', options);
            const realdate = current.toISOString().split("T")[0]

            days.push({
                day: dayCount,
                date: dateText,
                real: realdate,
                activities: [] // ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡πà‡∏≤‡∏á ‡πÜ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏¥‡∏°‡∏à‡∏≤‡∏Å API
            });

            // ‡πÑ‡∏õ‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            current.setDate(current.getDate() + 1);
            dayCount++;
        }
        return days;
    };

    useEffect(() => {
        // --- 1. (‡πÄ‡∏û‡∏¥‡πà‡∏°) ‡∏î‡∏∂‡∏á ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏±‡∏ï‡∏£" ---
        // (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Å‡πá‡∏ö user_id ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô localStorage ‡∏ï‡∏≠‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô)


        // 3. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ‡∏´‡∏•‡∏±‡∏Å (‡πÉ‡∏™‡πà headers)
        fetch(`${base_api}/trip_detail?room_id=${room_id}`) // <--- ‡πÄ‡∏û‡∏¥‡πà‡∏° headers
            .then((res) => {
                // --- 4. (‡πÄ‡∏û‡∏¥‡πà‡∏°) ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ---
                if (!res.ok) {
                    // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏î‡∏ô Block (401/403) ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ (404
                    throw new Error(`HTTP error! status: ${res.status}`);
                }
                return res.json();
                // --------------------------
            })
            .then((tripData) => {
                setTrip(tripData);
                setTitle(tripData.title);
                setDescription(tripData.description);

                if (tripData && tripData.start_date && tripData.end_date) {
                    const daysArray = generateTripDays(tripData.start_date, tripData.end_date);

                    // 5. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡∏î‡∏∂‡∏á "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°" (‡πÉ‡∏™‡πà headers)
                    fetch(`${base_api}/itineraries_demo/${room_id}`) // <--- ‡πÄ‡∏û‡∏¥‡πà‡∏° headers
                        .then(res => {

                            return res.json()
                        })
                        .then(apiActivities => {
                            const populatedDays = daysArray.map(day => {
                                const activitiesForThisDay = apiActivities.filter(
                                    act => act.date === day.real
                                );
                                return { ...day, activities: activitiesForThisDay };
                            });
                            setTrips(populatedDays);
                        })
                        .catch(err => console.error("Error fetching activities:", err));
                }
            })
            .catch((err) => {
                // --- 6. (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) catch ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡πâ‡∏á‡∏≠‡∏≠‡∏Å ---
                if (err.message.includes('Forbidden')) {
                    console.error("Error fetching trip details:", err);
                } else {
                    console.error("Error fetching trip details:", err);
                    // (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏î‡πâ‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏ó‡∏£‡∏¥‡∏õ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
                }
                // --------------------------------------
            });

        document.body.style.backgroundColor = "";
        return () => { document.body.style.backgroundColor = "#f5f5f5"; }

        // 7. (‡πÄ‡∏û‡∏¥‡πà‡∏°) ‡πÉ‡∏™‡πà dependency 
    }, [room_id]);

    // const trips = [
    //     {
    //         day: 1,
    //         date: "1 ‡∏ò.‡∏Ñ.",
    //         activities: [
    //             {
    //                 title: "‡∏ñ‡∏∂‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
    //                 time: "9:00",
    //                 location: "‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
    //                 mapLink: "https://maps.google.com/?q=Chiang+Mai+Airport",
    //                 details: [
    //                     "‚úà ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏™‡∏∏‡∏ß‡∏£‡∏£‡∏ì‡∏†‡∏π‡∏°‡∏¥ (BKK) ‚Üí ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà (CNX)",
    //                     "‚è± ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 15 ‡∏ô‡∏≤‡∏ó‡∏µ",
    //                     "üõÑ ‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏î‡∏£‡∏ñ‡∏ï‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 20 ‡∏ô‡∏≤‡∏ó‡∏µ"
    //                 ]
    //             },
    //             {
    //                 title: "‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô ‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡∏•‡∏∏‡∏á‡∏õ‡πâ‡∏≤",
    //                 time: "12:30",
    //                 location: "‡∏ñ‡∏ô‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
    //                 mapLink: "https://maps.google.com/?q=Khao+Soi+Lung+Pa+Restaurant",
    //                 details: [
    //                     "üç¥ ‡∏°‡∏∑‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡∏•‡∏∏‡∏á‡∏õ‡πâ‡∏≤",
    //                     "‚≠ê ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡πÑ‡∏Å‡πà, ‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏µ‡πâ‡∏¢‡∏ß",
    //                     "üí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: 80‚Äì150 ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏ô",
    //                     "üìù ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏¥‡∏ß"
    //                 ]
    //             }
    //         ]
    //     },
    //     {
    //         day: 2,
    //         date: "2 ‡∏ò.‡∏Ñ.",
    //         activities: [
    //             {
    //                 title: "‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û",
    //                 time: "10:00",
    //                 location: "‡∏™‡∏∏‡πÄ‡∏ó‡∏û, ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
    //                 mapLink: "#",
    //                 details: [
    //                     "üöå ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û (‡∏£‡∏ñ‡∏™‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß/‡∏£‡∏ñ‡∏ï‡∏π‡πâ)",
    //                     "‚è± ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 30‚Äì40 ‡∏ô‡∏≤‡∏ó‡∏µ",
    //                     "üí∞ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°: 30 ‡∏ö‡∏≤‡∏ó (‡∏ä‡∏≤‡∏ß‡∏ï‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ï‡∏¥)",
    //                     "üìù ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏•‡∏∞‡πÑ‡∏´‡∏ß‡πâ‡∏û‡∏£‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
    //                 ]
    //             }
    //         ]
    //     }
    // ];

    return (
        <>
            <header className={nav.header}>
                <div className={nav.container}>
                    <div className={nav.logo}>
                        <Link to="/tripMain">Travel Planner Pro ‚úàÔ∏è</Link>
                    </div>
                    <nav className={nav.mainNav}>
                        <ul>
                            <li><Link to="/tripMain">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Link></li>
                            <li><Link to="/tripManage">‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</Link></li>
                            <li>
                                <img
                                    src="https://img.poki-cdn.com/cdn-cgi/image/q=78,scq=50,width=1200,height=1200,fit=cover,f=png/5f8d164d8269cffacc89422054b94c70/roblox.png"
                                    alt="User Profile"
                                    className={nav.profilePic}
                                    onClick={() => window.location.href = "/user"}
                                />
                            </li>
                        </ul>
                    </nav>
                </div>
            </header>

            <main className={plantemp.tripPlanMain}>
                <div className={plantemp.container}>
                    <div className={plantemp.planHeader}>
                        <h1>{title}</h1>
                        <div className={plantemp.planMeta}>
                            <span className={plantemp.planDates}></span>
                            <button className={`${plantemp.btn} ${plantemp.btnBack}`} onClick={() => navigate("/tripmain")}>
                                <i className="fas fa-arrow-left"></i> ‡∏Å‡∏•‡∏±‡∏ö
                            </button>
                            <button className={`${plantemp.btn} ${plantemp.btnCopy}`} onClick={() => navigate("/tripmanage")}>
                                <i className="fas fa-plus-circle"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ú‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
                            </button>
                        </div>
                    </div>
                    <div class={plantemp.info}>
                        <div class={plantemp.container}>
                            <p>{description}</p>
                        </div>
                    </div>
                    <div className={plantemp.planLayout}>
                        <aside className={plantemp.planSidebar}>
                            <div className={`${plantemp.sidebarItem} ${plantemp.active}`}>
                                <i className="fas fa-calendar-alt"></i> ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
                            </div>
                            <div className={plantemp.sidebarItem} onClick={() => navigate(`/tripBudgetInfo?room_id=${room_id}`, {
                                state: {
                                    tripTitle: title,
                                    tripDescription: description,
                                    trip: trip
                                }
                            })}>
                                <i className="fas fa-wallet"></i> ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                            </div>
                        </aside>

                        <div className={styles.planContent}>
                            <div className={styles.itineraryView}>

                                {trips.map((tripDay, idx) => (
                                    <div key={idx} className={styles.itineraryDay}>
                                        <h3 className={styles.dayTitle}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {tripDay.day} <span className={styles.dateText}>({tripDay.date})</span></h3>
                                        <div className={styles.dayActivities}>

                                            {/* ‚ñº‚ñº‚ñº ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‚ñº‚ñº‚ñº */}

                                            {/* 3. ‡∏ß‡∏ô‡∏•‡∏π‡∏õ activities ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å API */}
                                            {tripDay.activities.map((act) => (
                                                <div key={act.itinerary_id} className={styles.activityCard}>
                                                    <div className={styles.activityInfo}>
                                                        <h4>
                                                            <i className="fas fa-plane-arrival"></i> {act.title}{" "}

                                                            {/* 3.1 ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ link map ‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• */}
                                                            {act.map && (
                                                                <a href={act.map} target="_blank" rel="noopener noreferrer">[‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà]</a>
                                                            )}
                                                        </h4>

                                                        {/* 3.2 ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤/‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà ‡∏Ñ‡πà‡∏≠‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• */}
                                                        {act.time && <p className={styles.activityTime}>{act.time.substring(0, 5)}</p>}
                                                        {act.location && <p className={styles.activityLocation}>{act.location}</p>}

                                                        <div className={styles.activityDetail}>
                                                            <ul>
                                                                {/* 3.3 ‡∏ß‡∏ô‡∏•‡∏π‡∏õ details ‡∏à‡∏≤‡∏Å Model ‡∏ó‡∏µ‡πà include ‡∏°‡∏≤ */}
                                                                {act.ItineraryDetails && act.ItineraryDetails.map((detail, j) => (
                                                                    <li key={j}>{detail.description}</li>
                                                                ))}
                                                            </ul>
                                                        </div>
                                                    </div>
                                                    <div className={styles.activityActions}>


                                                    </div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </>
    );
}
