import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { useLocation, useNavigate } from "react-router-dom";
import EditTripModal from "../component/popup-editTripPlan";
import ShareTripModal from "../component/popup-shareTripPlan";
import ActivityTripModal from "../component/popup-ActivityTripModal";
import nav from "../css/main-nav.module.css";
import plantemp from "../css/tripTemplate.module.css";
import styles from "../css/tripPlan.module.css";

export default function TripPlanPage() {
    useEffect(() => {
        document.body.style.backgroundColor = "";
        return () => { document.body.style.backgroundColor = "#f5f5f5"; }
    }, []);
    const navigate = useNavigate();
    const location = useLocation();
    const params = new URLSearchParams(location.search);
    const room_id = params.get("room_id");
    // state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal ‡∏ï‡πà‡∏≤‡∏á‡πÜ
    const [editModalOpen, setEditModalOpen] = useState(false);
    const [shareModalOpen, setShareModalOpen] = useState(false);
    const [addActivityModalOpen, setAddActivityModalOpen] = useState(false);
    const [editActivityModalOpen, setEditActivityModalOpen] = useState(false);

    const trips = [
        {
            day: 1,
            date: "1 ‡∏ò.‡∏Ñ.",
            activities: [
                {
                    title: "‡∏ñ‡∏∂‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
                    time: "9:00",
                    location: "‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
                    mapLink: "https://maps.google.com/?q=Chiang+Mai+Airport",
                    details: [
                        "‚úà ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏ô‡∏≤‡∏°‡∏ö‡∏¥‡∏ô‡∏™‡∏∏‡∏ß‡∏£‡∏£‡∏ì‡∏†‡∏π‡∏°‡∏¥ (BKK) ‚Üí ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà (CNX)",
                        "‚è± ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á 15 ‡∏ô‡∏≤‡∏ó‡∏µ",
                        "üõÑ ‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏î‡∏£‡∏ñ‡∏ï‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 20 ‡∏ô‡∏≤‡∏ó‡∏µ"
                    ]
                },
                {
                    title: "‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô ‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡∏•‡∏∏‡∏á‡∏õ‡πâ‡∏≤",
                    time: "12:30",
                    location: "‡∏ñ‡∏ô‡∏ô‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
                    mapLink: "https://maps.google.com/?q=Khao+Soi+Lung+Pa+Restaurant",
                    details: [
                        "üç¥ ‡∏°‡∏∑‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡∏•‡∏∏‡∏á‡∏õ‡πâ‡∏≤",
                        "‚≠ê ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ã‡∏≠‡∏¢‡πÑ‡∏Å‡πà, ‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏µ‡πâ‡∏¢‡∏ß",
                        "üí∞ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: 80‚Äì150 ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏ô",
                        "üìù ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏¥‡∏ß"
                    ]
                }
            ]
        },
        {
            day: 2,
            date: "2 ‡∏ò.‡∏Ñ.",
            activities: [
                {
                    title: "‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û",
                    time: "10:00",
                    location: "‡∏™‡∏∏‡πÄ‡∏ó‡∏û, ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà",
                    mapLink: "#",
                    details: [
                        "üöå ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û (‡∏£‡∏ñ‡∏™‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß/‡∏£‡∏ñ‡∏ï‡∏π‡πâ)",
                        "‚è± ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 30‚Äì40 ‡∏ô‡∏≤‡∏ó‡∏µ",
                        "üí∞ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°: 30 ‡∏ö‡∏≤‡∏ó (‡∏ä‡∏≤‡∏ß‡∏ï‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ï‡∏¥)",
                        "üìù ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏•‡∏∞‡πÑ‡∏´‡∏ß‡πâ‡∏û‡∏£‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
                    ]
                }
            ]
        }
    ];

    return (
        <>
            <header className={nav.header}>
                <div className={nav.container}>
                    <div className={nav.logo}>
                        <Link to="/tripMain">Travel Planner Pro ‚úàÔ∏è</Link>
                    </div>
                    <nav className={nav.mainNav}>
                        <ul>
                            <li><Link to="/tripMain">‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Link></li>
                            <li><Link to="/tripManage">‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</Link></li>
                            <li>
                                <img
                                    src="https://img.poki-cdn.com/cdn-cgi/image/q=78,scq=50,width=1200,height=1200,fit=cover,f=png/5f8d164d8269cffacc89422054b94c70/roblox.png"
                                    alt="User Profile"
                                    className={nav.profilePic}
                                    onClick={() => window.location.href = "/user"}
                                />
                            </li>
                        </ul>
                    </nav>
                </div>
            </header>

            <main className={plantemp.tripPlanMain}>
                <div className={plantemp.container}>
                    <div className={plantemp.planHeader}>
                        <h1>‡∏ó‡∏£‡∏¥‡∏õ‡∏ï‡∏∞‡∏•‡∏∏‡∏¢‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà 4 ‡∏ß‡∏±‡∏ô 3 ‡∏Ñ‡∏∑‡∏ô</h1>
                        <div className={plantemp.planMeta}>
                            <span className={plantemp.planDates}>1 - 4 ‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏° 2567</span>
                            <button className={`${plantemp.btn} ${plantemp.btnSave}`} onClick={() => setEditModalOpen(true)}>
                                <i className="fas fa-edit"></i> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                            </button>
                            <button className={`${plantemp.btn} ${plantemp.btnShare}`} onClick={() => setShareModalOpen(true)}>
                                <i className="fas fa-share-alt"></i> ‡πÅ‡∏ä‡∏£‡πå
                            </button>
                        </div>
                    </div>
                    <div class={plantemp.info}>
                        <div class={plantemp.container}>
                            <p>‡∏ó‡∏£‡∏¥‡∏õ‡∏ï‡∏∞‡∏•‡∏∏‡∏¢‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏°‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤, ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ß‡∏±‡∏î, ‡πÑ‡∏õ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥, ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏∞‡∏•‡∏∏‡∏¢‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏≠‡∏î‡πÄ‡∏ß‡∏ô‡πÄ‡∏à‡∏≠‡∏£‡πå ‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏´‡∏ô‡∏™‡∏•‡∏¥‡∏á, ‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏Å‡πà‡∏á, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏µ‡πà ATV ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û, ‡∏î‡∏≠‡∏¢‡∏≠‡∏¥‡∏ô‡∏ó‡∏ô‡∏ô‡∏ó‡πå, ‡∏°‡πà‡∏≠‡∏ô‡πÅ‡∏à‡πà‡∏°, ‡∏ñ‡∏ô‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡πà‡∏≤‡πÅ‡∏û, ‡πÇ‡∏õ‡πà‡∏á‡πÅ‡∏¢‡∏á ‡∏à‡∏±‡∏á‡πÄ‡∏Å‡∏¥‡πâ‡∏• ‡πÇ‡∏Ñ‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡∏ã‡∏¥‡∏õ‡πÑ‡∏•‡∏ô‡πå, ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡∏£‡∏ô‡∏î‡πå‡πÅ‡∏Ñ‡∏ô‡∏¢‡∏≠‡∏ô ‡∏´‡∏≤‡∏á‡∏î‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö</p>
                        </div>
                    </div>
                    <div className={plantemp.planLayout}>
                        <aside className={plantemp.planSidebar}>
                            <div className={`${plantemp.sidebarItem} ${plantemp.active}`}>
                                <i className="fas fa-calendar-alt"></i> ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
                            </div>
                            <div className={plantemp.sidebarItem} onClick={() => navigate(`/tripBudget?room_id=${room_id}`)}>
                                <i className="fas fa-wallet"></i> ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                            </div>
                            <div className={plantemp.sidebarItem} onClick={() => navigate(`/tripTeam?room_id=${room_id}`)}>
                                <i className="fas fa-users"></i> ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å & ‡πÅ‡∏ä‡∏ó
                            </div>
                            <div className={plantemp.sidebarItem} onClick={() => navigate(`/tripFolder?room_id=${room_id}`)}>
                                <i className="fas fa-file-alt"></i> ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
                            </div>
                        </aside>

                        <div className={styles.planContent}>
                            <div className={styles.itineraryView}>
                                {trips.map((tripDay, idx) => (
                                    <div key={idx} className={styles.itineraryDay}>
                                        <h3 className={styles.dayTitle}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {tripDay.day} <span className={styles.dateText}>({tripDay.date})</span></h3>
                                        <div className={styles.dayActivities}>
                                            {tripDay.activities.map((act, i) => (
                                                <div key={i} className={styles.activityCard}>
                                                    <div className={styles.activityInfo}>
                                                        <h4>
                                                            <i className="fas fa-plane-arrival"></i> {act.title}{" "}
                                                            <a href={act.mapLink} target="_blank" rel="noopener noreferrer">[‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà]</a>
                                                        </h4>
                                                        <p className={styles.activityTime}>{act.time}</p>
                                                        <p className={styles.activityLocation}>{act.location}</p>
                                                        <div className={styles.activityDetail}>
                                                            <ul>
                                                                {act.details.map((d, j) => <li key={j}>{d}</li>)}
                                                            </ul>
                                                        </div>
                                                    </div>
                                                    <div className={styles.activityActions}>
                                                        <button className={styles.btnEdit} onClick={() => setEditActivityModalOpen(true)}>
                                                            <i className="fas fa-edit"></i>
                                                        </button>
                                                        <button className={styles.btnDelete}><i className="fas fa-trash"></i></button>
                                                    </div>
                                                </div>
                                            ))}
                                            <button className={styles.btnAddActivity} onClick={() => setAddActivityModalOpen(true)}>
                                                <i className="fas fa-plus"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
                                            </button>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>
                </div>
            </main>

            {/* Edit Modal */}
            <EditTripModal
                isOpen={editModalOpen}
                onClose={() => setEditModalOpen(false)}
            />

            {/* Share Modal */}
            <ShareTripModal
                isOpen={shareModalOpen}
                onClose={() => setShareModalOpen(false)}
            />

            {/* Add Activity Modal */}
            <ActivityTripModal
                type="add"
                open={addActivityModalOpen}
                onClose={() => setAddActivityModalOpen(false)}
            />

            {/* Edit Activity Modal */}
            <ActivityTripModal
                type="edit"
                open={editActivityModalOpen}
                onClose={() => setEditActivityModalOpen(false)}
                editData={{
                    date: "1 ‡∏ò.‡∏Ñ.",
                    main: "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
                    time: "09:00",
                    location: "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û",
                    locationLink: "https://...",
                    details: [{ text: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î 1" }, { text: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î 2" }]
                }}
            />
        </>
    );
}
